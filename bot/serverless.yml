service: bot

custom:
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: python3.6
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
  environment:
    RDS_HOST: db.host.com
    RDS_DBNAME: dbname
    RDS_USERNAME: username
    RDS_PASSWORD: password

# ideally this part would import as JSON from some AWS CLI command to see where our DB is running
# in the mean time, these need to match
  vpc:
    securityGroupIds:
      - sg-0ccfdaa19e7e112da
    subnetIds:
      - subnet-e7fae9bc
      - subnet-abbde3cd
      - subnet-caa4da82

# you can add packaging information here
package:
  include:
    - psycopg2/**

functions:
  sigbot:
    handler: handler.handle_bot
    tags:
      created: serverless for SignalBot service

    events:
      - http:
          path: api/metrics/{bottype}
          method: get
          cors: true
      - http:
          path: api/metrics/{bottype}
          method: post
          cors: true



# you can add CloudFormation resource templates here
resources:
  Resources:
    S3BackStore:
      Type: "AWS::S3::Bucket"

    #https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html
    RDBMS:
      Type: "AWS::RDS::DBInstance"
      Properties:
        AllocatedStorage: 5
        DBInstanceClass: "db.t2.micro"
        Engine: "postgres"
        EngineVersion: 9.5
        MasterUsername: "dbuser"
        MasterUserPassword: "dbpassword"
        Tags:
          - Key: "Name"
            Value: "bot RDS database"
          - Key: "Role"
            Value: "Stage - ${self:custom.stage}"

  

#  Outputs:
#     RDBMSId:
#       Description: "Instance id of newly created database"
#       Value: "Ref" : "RDBMS"
#     RDBMSAddress:
#       Description: "Endpoint Address of newly created database"
#       Value: "Fn::GetAtt" : [ "RDBMS", "Endpoint.Port" ]

