service: dynabot

frameworkVersion: ">=1.1.0 < 2.0.0"

# used for readability
custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  devDynamoCapacity:
    ReadCapacityUnits: 1
    WriteCapacityUnits: 1
  prodDynamoCapacity:
    ReadCapacityUnits: 2
    WriteCapacityUnits: 2
  

provider:
  name: aws
  runtime: python3.6
  region: us-west-2

  environment:
    STAGE: ${self:custom.stage}
    DYNAMODB_TABLE: ${self:service}-${self:custom.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${self:custom.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


functions:
  dynabot:
    handler: handler.handle_dynabot
    tags:
      created: serverless for dynabot

    events:
      - http:
          path: api/metrics/{bottype}
          method: get
          cors: true
      - http:
          path: api/metrics/{bottype}
          method: post
          cors: true



resources:
  Resources:
    DynaBotDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      #DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: Id
            AttributeType: S
          -
            AttributeName: CreatedAt
            AttributeType: S
          -
            AttributeName: bottype
            AttributeType: S
        KeySchema:
          -
            AttributeName: Id
            KeyType: HASH
          -
            AttributeName: CreatedAt
            KeyType: RANGE
        Tags:
            - Key: "Created"
              Value: "part of DynaBot SLS"
        LocalSecondaryIndexes:
          - IndexName: BotTypeIndex
            KeySchema:
              - AttributeName: Id
                KeyType: HASH
              - AttributeName: bottype
                KeyType: RANGE
            Projection: 
              ProjectionType: KEYS_ONLY
            
        ProvisionedThroughput: ${self:custom.${self:custom.stage}DynamoCapacity}
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
      
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
